# Generated by Django 4.2.21 on 2025-06-01 09:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0013_useranalysisresults_description_and_more'),
        ('dashboard', '0004_dashboard_analysis_results'),
    ]

    operations = [
        migrations.AddField(
            model_name='dashboard',
            name='metadata',
            field=models.JSONField(blank=True, help_text='Additional metadata for the dashboard stored in JSON format.', null=True),
        ),
        migrations.AlterField(
            model_name='dashboard',
            name='analysis_results',
            field=models.ManyToManyField(blank=True, help_text='Analysis results associated with this dashboard (Deprecated).', related_name='dashboards', to='analysis.useranalysisresults'),
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_type', models.CharField(help_text='Type of the widget (e.g., chart, table, etc.).', max_length=50)),
                ('config', models.JSONField(blank=True, default=dict, help_text='Configuration settings for the widget stored in JSON format.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when this widget was created.')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when this widget was updated.')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the widget in the dashboard.')),
                ('title', models.CharField(help_text='Title of the widget.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the widget.', null=True)),
                ('text_content', models.TextField(blank=True, help_text='Text content for the widget, if applicable.', null=True)),
                ('analysis_result', models.ForeignKey(blank=True, help_text='Analysis result associated with this widget.', null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.useranalysisresults')),
                ('dashboard', models.ForeignKey(help_text='The dashboard this widget belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='dashboard.dashboard')),
            ],
        ),
    ]
